/*
using System.Diagnostics.Contracts;
using MindPlus.Empresa.Entity;
using static MindPlus.Enumerado.Usuario.Usuario;

namespace MindPlus.Usuario.Entity
{
    public class UsuarioEntity
    {
        public int Id { get; set; }
        public string Nome { get; set; }
        public string Email { get; set; }
        public string Senha { get; set; }
        public string Cpf { get; set; }
        public string? Telefone { get; set; }
        public string? Endereco { get; set; }
        public EmpresaEntity Empresa { get; set; }
        public StatusAtivoInativo Status { get; set; }
        public FuncaoUsuario Funcao { get; set; }


        public UsuarioEntity(int id,
                       string nome,
                       string email,
                       string senha,
                       string cpf,
                       string telefone,
                       string endereco,
                       EmpresaEntity empresa,
                       StatusAtivoInativo status,
                       FuncaoUsuario funcao)
        {
            Contract.Requires<ArgumentException>(!string.IsNullOrEmpty(nome), "O nome do usuário não pode ser nulo ou vazio.");
            Contract.Requires<ArgumentException>(!string.IsNullOrEmpty(email), "O e-mail do usuário não pode ser nulo ou vazio.");
            Contract.Requires<ArgumentException>(!string.IsNullOrEmpty(senha), "A senha do usuário não pode ser nula ou vazia.");
            Contract.Requires<ArgumentException>(!string.IsNullOrEmpty(cpf), "O CPF do usuário não pode ser nulo ou vazio.");
            Contract.Requires<ArgumentException>(empresa != null, "O usuário deve ser vinculado à uma Empresa.");

            if (!Enum.IsDefined(typeof(StatusAtivoInativo), status))
                throw new ArgumentException("Valor inválido para o enum StatusAtivo.", nameof(status));

            if (!Enum.IsDefined(typeof(FuncaoUsuario), funcao))
                throw new ArgumentException("Valor inválido para o enum FuncaoUsuario.", nameof(funcao));

            Id = id;
            Nome = nome;
            Email = email;
            Senha = senha;
            Cpf = cpf;
            Telefone = telefone;
            Endereco = endereco;
            Empresa = empresa;
            Status = status;
            Funcao = funcao;
        }
    }
}
*/